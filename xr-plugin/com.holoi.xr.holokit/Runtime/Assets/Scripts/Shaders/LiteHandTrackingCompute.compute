// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

Texture2D<float> DepthTexture;
Texture2D<float> StencilTexture;

// The value passed in is width - 1
float Width;
// The value passed in is height - 1
float Height;
float MaxDepth;

//RWTexture2D<float4> Result;
RWStructuredBuffer<float3> ResultBuffer;

float FlipY(float input)
{
    return Height - input;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (DepthTexture[float2(id.x, FlipY(id.y))].r != 0 && DepthTexture[float2(id.x, FlipY(id.y))].r < MaxDepth) {
        ResultBuffer[id.x + id.y * Width] = float3(id.x, id.y, DepthTexture[float2(id.x, FlipY(id.y))].r);
        //Result[id.xy] = float4(DepthTexture[float2(id.x, FlipY(id.y))].r, 0, 0, 1);
    } else {
        ResultBuffer[id.x + id.y * Width] = float3(0, 0, 0);
        //Result[id.xy] = float4(0, 0, 0, 1);
    }
}